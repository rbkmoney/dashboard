@use '~@angular/material' as mat;
@import '../../../styles/utils/fill';

@mixin button($text-color, $background-color) {
    background: $background-color;
    color: $text-color;
}

@mixin stroked-button($text-color, $border-color) {
    border: solid $border-color 2px;
    color: $text-color;
}

@mixin focused-background($color) {
    &.focused {
        background: $color;
    }
}

@mixin dsh-button-theme($theme) {
    $foreground: map-get($theme, foreground);
    $background: map-get($theme, background);
    $accent: map-get($theme, accent);
    $primary: map-get($theme, primary);
    $warn: map-get($theme, warn);

    .dsh {
        &-button,
        &-stroked-button,
        &-icon-button {
            background: transparent;
            color: map-get($foreground, text);

            &:focus:not(:disabled) {
                outline: none;
            }
        }

        &-button {
            &:hover {
                background: mat.get-color-from-palette($background, hover);
            }
            @include focused-background(map-get($background, selected-button));

            &.dsh-primary {
                @include button(map-get($background, card), mat.get-color-from-palette($primary, default));
                @include focused-background(mat.get-color-from-palette($primary, 300));
            }

            &.dsh-accent {
                @include button(map-get($background, card), mat.get-color-from-palette($accent, default));
                @include focused-background(mat.get-color-from-palette($accent, 200));
            }

            &.dsh-warn {
                @include button(map-get($background, card), mat.get-color-from-palette($warn, 400));
                @include focused-background(mat.get-color-from-palette($warn, 300));
            }

            &:disabled {
                background: map-get($foreground, disabled-button);
            }
        }

        &-stroked-button {
            &.dsh-primary {
                @include stroked-button(
                    mat.get-color-from-palette($primary, default),
                    mat.get-color-from-palette($primary, default)
                );
                @include focused-background(rgba(mat.get-color-from-palette($primary, 300), 0.1));
            }

            &.dsh-accent {
                @include stroked-button(
                    mat.get-color-from-palette($accent, default),
                    mat.get-color-from-palette($accent, default)
                );
                @include focused-background(rgba(mat.get-color-from-palette($accent, 200), 0.1));
            }

            &.dsh-warn {
                @include stroked-button(mat.get-color-from-palette($warn, 400), mat.get-color-from-palette($warn, 400));
                @include focused-background(rgba(mat.get-color-from-palette($warn, 300), 0.1));
            }

            &:disabled {
                border-color: map-get($foreground, disabled-button);
                color: map-get($foreground, disabled-button);
            }
        }

        &-icon-button {
            @include focused-background(map-get($background, selected-button));

            &.dsh-primary {
                @include button(map-get($background, card), mat.get-color-from-palette($primary, default));
                @include focused-background(mat.get-color-from-palette($primary, 300));
            }

            &.dsh-accent {
                @include button(map-get($background, card), mat.get-color-from-palette($accent, default));
                @include focused-background(mat.get-color-from-palette($accent, 200));
            }

            &.dsh-warn {
                @include button(map-get($background, card), mat.get-color-from-palette($warn, 400));
                @include focused-background(mat.get-color-from-palette($warn, 300));
            }

            &:disabled {
                background: map-get($foreground, disabled-button);
            }
        }
    }
}

@mixin dsh-button-typography($config) {
    .dsh {
        &-button,
        &-stroked-button,
        &-icon-button {
            font: {
                family: mat.font-family($config, button);
                size: mat.font-size($config, button);
                weight: mat.font-weight($config, button);
            }
        }
    }
}
