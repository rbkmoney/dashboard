$mat-button-toggle-padding: 0 12px;
$mat-button-toggle-height: 50px;
$mat-button-toggle-border-radius: 4px;

.dsh {
    &-button-toggle {
        white-space: nowrap;
        position: relative;
        flex-grow: 1;
        flex-basis: 0;

        &:focus {
            outline: none;
        }

        &:not(.dsh-button-toggle-disabled):hover .dsh-button-toggle-focus-overlay {
            opacity: 0.04;
        }

        // On touch devices the hover state will linger on the element after the user has tapped.
        // Disable it, because it can be confused with focus. We target the :hover state explicitly,
        // because we still want to preserve the keyboard focus state for hybrid devices that have
        // a keyboard and a touchscreen.
        @media (hover: none) {
            &:not(.dsh-button-toggle-disabled):hover .dsh-button-toggle-focus-overlay {
                display: none;
            }
        }

        &-group {
            width: 100%;
        }

        &-standalone,
        &-group {
            position: relative;
            display: inline-flex;
            flex-direction: row;
            white-space: nowrap;
            overflow: hidden;
            border-radius: $mat-button-toggle-border-radius;
        }

        &-vertical {
            flex-direction: column;
            flex-basis: auto;
            flex-grow: 0;

            &-label-content {
                // Vertical button toggles shouldn't be an inline-block, because the toggles should
                // fill the available width in the group.
                display: block;
            }
        }

        &-label-content {
            position: relative;
            display: inline-block;
            font-weight: 500;

            .dsh-button-toggle & {
                line-height: $mat-button-toggle-height;
                padding: $mat-button-toggle-padding;
            }
        }

        // Fixes SVG icons that get thrown off because of the `vertical-align` on the parent.
        .dsh-icon svg {
            vertical-align: top;
        }

        &-label-content > * {
            vertical-align: middle;
        }

        &-focus-overlay {
            border-radius: inherit;

            // Disable pointer events to prevent it from hijacking user events.
            pointer-events: none;
            opacity: 0;
        }

        &-button {
            border: 0;
            background: none;
            color: inherit;
            padding: 0;
            margin: 0;
            font: inherit;
            outline: none;
            width: 100%; // Stretch the button in case the consumer set a custom width.
            cursor: pointer;

            .dsh-button-toggle-disabled & {
                cursor: default;
            }

            // Remove the extra focus outline that is added by Firefox on native buttons.
            &::-moz-focus-inner {
                border: 0;
            }
        }
    }
}
