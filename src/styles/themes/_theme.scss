@use '~@angular/material' as mat;
@import '../utils/map-get-strict';

@import '../dsh/theme';
@import '../mat/theme';

@mixin theme($config, $background, $foreground) {
    $basic-theme: ();

    @if map-get($config, is-dark) == true {
        $basic-theme: mat.define-dark-theme(
            map-get($config, primary),
            map-get($config, accent),
            map-get($config, warn)
        );
    } @else {
        $basic-theme: mat.define-light-theme(
            map-get($config, primary),
            map-get($config, accent),
            map-get($config, warn)
        );
    }

    $background: map-merge(
        map-merge(map-get($basic-theme, background), $background),
        (
            // --- Custom ---
            hover: map-get-strict($background, hover),
            selected-button: map-get-strict($background, selected-button)
        )
    );

    $foreground: map-merge(
        map-merge(map-get($basic-theme, foreground), $foreground),
        (
            // --- Custom ---
            contrast-text: map-get-strict($foreground, contrast-text),
            light-text: map-get-strict($foreground, light-text),
            border: map-get-strict($foreground, border)
        )
    );

    $theme: map-merge(
        $basic-theme,
        (
            foreground: $foreground,
            background: $background,
            // --- Custom ---
            // Theme name (for CSS class name)
            name: map-get-strict($config, name),
            // If you need other colors, then replace with a palette
            success-base: map-get-strict($config, success-base),
            pending-base: map-get-strict($config, pending-base),
            warn-base: map-get-strict($config, warn-base),
        )
    );

    body.#{map-get($theme, name)} {
        @include mat.all-component-themes($theme);
        @include mat-theme($theme);
        @include dsh-theme($theme);
    }
}
